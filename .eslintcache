[{"/Users/sergeifrolov/kirobo/src/index.tsx":"1","/Users/sergeifrolov/kirobo/src/reportWebVitals.ts":"2","/Users/sergeifrolov/kirobo/src/App.tsx":"3","/Users/sergeifrolov/kirobo/src/Features/DeviceInfo/index.ts":"4","/Users/sergeifrolov/kirobo/src/Features/DeviceInfo/DeviceInfo.tsx":"5","/Users/sergeifrolov/kirobo/src/Features/Wallet/index.ts":"6","/Users/sergeifrolov/kirobo/src/Features/Wallet/Wallet.tsx":"7"},{"size":500,"mtime":1611596953047,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1611596953047,"results":"10","hashOfConfig":"9"},{"size":490,"mtime":1611781420881,"results":"11","hashOfConfig":"9"},{"size":39,"mtime":1611689279450,"results":"12","hashOfConfig":"9"},{"size":2133,"mtime":1611778143808,"results":"13","hashOfConfig":"9"},{"size":35,"mtime":1611771120314,"results":"14","hashOfConfig":"9"},{"size":2811,"mtime":1611781173014,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"o15eev",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/sergeifrolov/kirobo/src/index.tsx",[],["33","34"],"/Users/sergeifrolov/kirobo/src/reportWebVitals.ts",[],"/Users/sergeifrolov/kirobo/src/App.tsx",[],"/Users/sergeifrolov/kirobo/src/Features/DeviceInfo/index.ts",[],"/Users/sergeifrolov/kirobo/src/Features/DeviceInfo/DeviceInfo.tsx",["35"],"import React from 'react';\n\ntype DeviceInfo = {\n    hostType?: \"desktop-browser\" | \"mobile-browser\" | \"mobile-webview\";\n    deviceType?: \"mobile\" | \"desktop\";\n    deviceName?: \"IPhone\" | \"IPad\" | \"IPod\" | \"Android\" | \"WebOS\";\n}\n\nfunction DeviceInfo() {\n  const [deviceInfo, setDeviceInfo] = React.useState<DeviceInfo>();\n\n  const getIOSDevice = (): \"IPhone\" | \"IPad\" | \"IPod\" | undefined => {\n    const { userAgent } = navigator;\n    if(Boolean(userAgent.match(/iPhone/))) {\n       return \"IPhone\";\n    }\n\n    if(Boolean(userAgent.match(/iPad/))) {\n        return \"IPad\";\n    }\n\n    if(Boolean(userAgent.match(/iPod/))) {\n        return \"IPod\";\n    }\n\n    return;\n  }\n  const getDeviceInfo = () => {\n    const { userAgent } = navigator;\n    if(Boolean(userAgent.match(/; wv/))) {\n        setDeviceInfo({\n            hostType: \"mobile-webview\",\n            deviceType: \"mobile\",\n            deviceName: \"Android\",\n        })\n        return;\n     }\n\n     if(Boolean(userAgent.match(/Android/))) {\n        setDeviceInfo({\n            hostType: \"mobile-browser\",\n            deviceType: \"mobile\",\n            deviceName: \"Android\",\n        })\n        return;\n     }\n\n    \n    const iosDevice = getIOSDevice();\n\n     if(iosDevice && Boolean(userAgent.match(/Mobile\\/(?!.*Safari)/))) {\n        setDeviceInfo({\n            hostType: \"mobile-webview\",\n            deviceType: \"mobile\",\n            deviceName: iosDevice,\n        })\n        return;\n     } \n\n     if(iosDevice) {\n        setDeviceInfo({\n            hostType: \"mobile-browser\",\n            deviceType: \"mobile\",\n            deviceName: iosDevice,\n        })\n        return;\n     }\n\n     if(!Boolean(userAgent.match(/Mobi/))) {\n        setDeviceInfo({\n            hostType: \"desktop-browser\",\n            deviceType: \"desktop\",\n            deviceName: \"WebOS\",\n        })\n        return;\n     }\n\n  }\n  React.useEffect(getDeviceInfo, []);\n  return (\n    <div className=\"Container Align-Center\">\n      <b>{deviceInfo?.hostType}</b>\n      <br />\n      <b>{deviceInfo?.deviceType}</b>\n      <br />\n      <b>{deviceInfo?.deviceName}</b>\n    </div>\n  );\n}\n\nexport default DeviceInfo;\n",["36","37"],"/Users/sergeifrolov/kirobo/src/Features/Wallet/index.ts",[],"/Users/sergeifrolov/kirobo/src/Features/Wallet/Wallet.tsx",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":9,"column":10,"nodeType":"44","messageId":"45","endLine":9,"endColumn":20},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"@typescript-eslint/no-redeclare","'DeviceInfo' is already defined.","Identifier","redeclared",["48"],["49"],"no-global-assign","no-unsafe-negation"]